@page "/AddInventory"
@inject NavigationManager NavigationManager;
@inject IAddInventoryUseCase IAddInventoryUseCase;
@using IMS.CoreBusiness;
@using IMS.UseCases.Inventories;
<h3>Add Inventory</h3>
<EditForm Model="inventory" OnValidSubmit="SaveInventory">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <div class="form-group">
        <label for="name"> Name</label>
        <InputText id="name" @bind-Value="inventory.Name" class="form-control"></InputText>
    </div>
    <div class="form-group">
        <label for="price"> Price</label>
        <InputNumber id="price" @bind-Value="inventory.Price" class="form-control"></InputNumber>
    </div>
    <div class="form-group">
        <label for="quantity"> Quantity</label>
        <InputNumber id="quantity" @bind-Value="inventory.Quantity" class="form-control"></InputNumber>
    </div>
    <br />
    <button type="submit" class="btn btn-primary"> Submit</button>
    <button type="button" class="btn btn-primary" @onclick="Cancel"> Cancel</button>
</EditForm>

@code {
    private Inventory inventory = new();

    private async Task SaveInventory()
    {
        int response = await IAddInventoryUseCase.ExecuteAsync(this.inventory);
        NavigationManager.NavigateTo("/inventories");
    }

    public void Cancel()
    {
        NavigationManager.NavigateTo("/inventories");
    }
}
